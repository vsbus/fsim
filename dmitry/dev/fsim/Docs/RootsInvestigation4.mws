{VERSION 6 0 "IBM INTEL NT" "6.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" 0 21 "" 0 1 0 0 0 1 0 0 0 0 2 0 0 0 0 1 }{PSTYLE "Normal" 
-1 0 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }1 1 
0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Heading 1" -1 3 1 {CSTYLE "" -1 -1 "
Times" 1 18 0 0 0 1 2 1 2 2 2 2 1 1 1 1 }1 1 0 0 8 4 1 0 1 0 2 2 0 1 }
{PSTYLE "Heading 2" -1 4 1 {CSTYLE "" -1 -1 "Times" 1 14 0 0 0 1 2 1 
2 2 2 2 1 1 1 1 }1 1 0 0 8 2 1 0 1 0 2 2 0 1 }{PSTYLE "Maple Output" 
-1 11 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }3 
3 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Maple Output" -1 12 1 {CSTYLE "" 
-1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }1 3 0 0 0 0 1 0 1 0 2 
2 0 1 }{PSTYLE "Maple Plot" -1 13 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 
0 1 2 2 2 2 2 2 1 1 1 1 }3 1 0 0 0 0 1 0 1 0 2 2 0 1 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "restart:" }}}{SECT 0 
{PARA 3 "" 0 "" {TEXT -1 21 "erf(x),  |x| = 0..0.5" }}{EXCHG {PARA 0 "
" 0 "" {MPLTEXT 0 21 825 "x := 'x':\nxsq := x * x:\np := evalf[25]( 0.
007547728033418631287834 ):\np := evalf[25]( 0.28880513720759408492401
0 + xsq * p ):\np := evalf[25]( 14.3383842191748205576712 + xsq * p ):
\np := evalf[25]( 38.0140318123903008244444 + xsq * p ):\np := evalf[2
5]( 3017.82788536507577809226 + xsq * p ):\np := evalf[25]( 7404.07142
710151470082064 + xsq * p ):\np := evalf[25]( 80437.363096084017283216
2 + xsq * p ):\nq := evalf[25]( 0.0 ):\nq := evalf[25]( 1.000000000000
00000000000 + xsq * q ):\nq := evalf[25]( 38.0190713951939403753468 + \+
xsq * q ):\nq := evalf[25]( 658.070155459240506326937 + xsq * q ):\nq \+
:= evalf[25]( 6379.60017324428279487120 + xsq * q ):\nq := evalf[25]( \+
34216.5257924628539769006 + xsq * q ):\nq := evalf[25]( 80437.36309608
40172826266 + xsq * q ):\n#result := evalf[25]( s * 1.1283791670955125
738961589031 * x * p / q ):" }}}{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 
31 "denom_ := evalf[25](expand(q));" }}{PARA 12 "" 1 "" {XPPMATH 20 "6
#>%'denom_G,.$\"9mi#G<S3'4jtV!)!#>\"\"\"*&$\"91!p(R&GY#zDl@MF(F))%\"xG
\"\"#F)F)*&$\"9?r[z#GWK<+'zj!#?F))F.\"\"%F)F)*&$\"9PpK10Cfa:q!e'!#@F))
F.\"\"'F)F)*&$\"9oMv.%R>&Rr!>!Q!#AF))F.\"\")F)F)*&$\"9+++++++++++5!#BF
))F.\"#5F)F)" }}}{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 32 "evalf[25](so
lve(denom_ = 0, x));" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 541 "ro
ots_erf_denom := [-1.426373241396638412600731-2.8760657045096324126433
18*I, 1.426373241396638412600731+2.876065704509632412643318*I, -.67143
78785737580836066432-2.960620382017725621607653*I, .671437878573758083
6066432+2.960620382017725621607653*I, -2.985926376546374255504042*I, 2
.985926376546374255504042*I, -.6714378785737580836066432+2.96062038201
7725621607653*I, .6714378785737580836066432-2.960620382017725621607653
*I, -1.426373241396638412600731+2.876065704509632412643318*I, 1.426373
241396638412600731-2.876065704509632412643318*I]:" }}}{EXCHG {PARA 0 "
" 0 "" {MPLTEXT 0 21 37 "evalf[25](map(abs, roots_erf_denom));" }}
{PARA 12 "" 1 "" {XPPMATH 20 "6#7,$\":@s%)4klVO\"=M5K!#CF$$\":>bn\"yK@
5KL!e.$F&F'$\":US]bUPYlPEf)HF&F)F'F'F$F$" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 22 "nops(roots_erf_denom);" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#\"#5" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 97 "ord := (x,y)-
> (Re(x) < Re(y)) or (Re(x) = Re(y) and Im(x) <= Im(y)):\nsort(roots_e
rf_denom, ord);" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#7,^$$!:J2g7%QmRTKPE
9!#C$!:=Lk7Cj4Xqlg(GF'^$F%$\":=Lk7Cj4Xqlg(GF'^$$!:Kk1O3ePdyyVr'!#D$!:`
wg@cs<?Q?1'HF'^$F.$\":`wg@cs<?Q?1'HF'^#$!:US]bUPYlPEf)HF'^#$\":US]bUPY
lPEf)HF'^$$\":Kk1O3ePdyyVr'F0F1^$F=F4^$$\":J2g7%QmRTKPE9F'F(^$FAF+" }}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}}{EXCHG }{SECT 1 {PARA 
3 "" 0 "" {TEXT -1 23 "erfc(x),  |x| = 0.5..10" }}{EXCHG {PARA 0 "" 0 
"" {MPLTEXT 0 21 1003 "x := 'x':\np := evalf[25]( 0.0 ):\np := evalf[2
5]( 0.5641877825507397413087057563 + x * p ):\np := evalf[25]( 9.67580
7882987265400604202961 + x * p ):\np := evalf[25]( 77.0816173036842860
9781633646 + x * p ):\np := evalf[25]( 368.5196154710010637133875746 +
 x * p ):\np := evalf[25]( 1143.262070703886173606073338 + x * p ):\np
 := evalf[25]( 2320.439590251635247384768711 + x * p ):\np := evalf[25
]( 2898.0293292167655611275846 + x * p ):\np := evalf[25]( 1826.334884
2295112592168999 + x * p ):\nq := evalf[25]( 1.0 ):\nq := evalf[25]( 1
7.14980943627607849376131193 + x * q ):\nq := evalf[25]( 137.125596050
0622202878443578 + x * q ):\nq := evalf[25]( 661.736120710765346921198
4771 + x * q ):\nq := evalf[25]( 2094.384367789539593790281779 + x * q
 ):\nq := evalf[25]( 4429.612803883682726711528526 + x * q ):\nq := ev
alf[25]( 6089.5424232724435504633068 + x * q ):\nq := evalf[25]( 4958.
82756472114071495438422 + x * q ):\nq := evalf[25]( 1826.3348842295112
595576438 + x * q ):\n#result = Math.Exp(-ApMath.Sqr(x)) * p / q;" }}}
{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 31 "denom_ := evalf[25](expand(q)
);" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#>%'denom_G,4$\":Wwbf7^HU)[LE=!#@
\"\"\"*&$\":%Qa\\rS6skv#)e\\F(F)%\"xGF)F)*&$\":2LY]NWsKUU&*3'F(F))F-\"
\"#F)F)*&$\":H:rEFo$)Q!GhHWF(F))F-\"\"$F)F)*&$\":#G!z$fR&*ynVQ%4#F(F))
F-\"\"%F)F)*&$\":&)>@pMl2r?hth'!#AF))F-\"\"&F)F)*&$\":W%yG?A1]gfDr8F@F
))F-\"\"'F)F)*&$\":JhP\\ygFO%4)\\r\"!#BF))F-\"\"(F)F)*&$\"#5!\"\"F))F-
\"\")F)F)" }}}{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 32 "evalf[25](solve
(denom_ = 0, x));" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 485 "roots
_erfc_denom := [-2.011990988834727338016931+2.299389575759744880828399
*I, -2.128667506183380659929532+1.526718281020067812840610*I, -2.19986
7743354566898691747+.8816534555639560428500526*I, -2.23437847976536435
0242444+.2888574448971411623585044*I, -2.234378479765364350242444-.288
8574448971411623585044*I, -2.199867743354566898691747-.881653455563956
0428500526*I, -2.128667506183380659929532-1.526718281020067812840610*I
, -2.011990988834727338016931-2.299389575759744880828399*I]:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 74 "f := v -> min( op( map( r ->
 evalf[25](abs(v - r)), roots_erfc_denom) ) ):" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 13 "v := 1:\nf(v);" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#$\":;![\"Gfp0Bd^sC$!#C" }}}{SECT 1 {PARA 4 "" 0 "" {TEXT -1 21 "
binary_search_min_arg" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 105 "bi
nary_search_min_arg:=\nproc(f, init::numeric, depth::nonnegint, span::
numeric, d::posint)\nlocal bs_aux;\n" }{TEXT -1 48 "------------------
------------------------------" }{MPLTEXT 1 0 826 "\nbs_aux :=\nproc(i
nit, depth, max_depth, span)\nlocal finit, pleft, fpleft, fpright, pri
ght;\n   if depth = max_depth then return init fi;\n   finit  := evalf
[d]( f(init) );\n   pleft  := evalf[d]( init - span );\n   fpleft := e
valf[d]( f(pleft) );\n   pright := evalf[d]( init + span );\n   fprigh
t := evalf[d]( f(pright) );\n   if    (fpleft >= finit) and (fpright >
= finit)\n    then bs_aux(init, depth + 1, max_depth - 1, evalf[d](spa
n/2))\n    elif fpright < finit\n    then bs_aux(pright, depth + 1, ma
x_depth - 1, evalf[d](span/2))\n    elif fpright >= finit\n    then bs
_aux(pleft, depth + 1, max_depth - 1, evalf[d](span/2))\n    else if f
pleft < fpright\n           then bs_aux(pleft, depth + 1, max_depth - \+
1, evalf[d](span/2))\n           else bs_aux(pright, depth + 1, max_de
pth - 1, evalf[d](span/2))\n         fi\n   fi\nend proc:\n" }{TEXT 
-1 48 "------------------------------------------------" }{MPLTEXT 1 
0 46 "\nreturn bs_aux(init, 0, depth, span)\nend proc:" }}}{PARA 4 "" 
0 "" {TEXT -1 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 77 "expans
_par := (y1, y2, s) -> evalf[24](max(abs(y1 - s), abs(y2 - s)) / f(s))
:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 110 "funcMin:= (y1, y2) ->
 expans_par(y1, y2, binary_search_min_arg( s -> expans_par(y1, y2, s),
 0, 40, 4.9, 24 )):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 107 "fun
cMinArg := (y1, y2)->\n             binary_search_min_arg( s -> expans
_par(y1, y2, s), 0, 300, 4.9, 24 ):" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 36 "funcMin(2.25,3);\nfuncMinArg(2.25,3);" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#$\"9elq]a$3E;9Nq(!#D" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#$\"9-N[T`u*******\\i#!#B" }}}{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 
21 83 "tv := time():\nd := 10:\nPIntervals := \nplot3d( funcMin, 0..10
, 0..10 ):\ntime() - tv;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#$\"&.v$!\"
$" }}}{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 95 "PLevel := plot3d( 1, x \+
= 0..10, y = 0..10):\nplots[display](\{PIntervals, PLevel\}, axes = bo
xed);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}{PARA 13 "" 1 "" 
{GLPLOT3D 593 593 593 {PLOTDATA 3 "6&-%%GRIDG6%;$\"\"!F($\"#5F(F&X4%)a
nythingG6\"6\"[gl'!%\"!!#\\bm\":\":!!!!!!!!00000000000000003FB5AEC887B
2283E3FC3FFE8BA05784F3FCBD62B98A5A1E73FD14F121865BA603FD445683B0A949A3
FD6E1920136F1353FD932B3EA76D8843FDB44BC96A0753E3FDD2131DC27250B3FDECFC
C44AEDF103FE02B6CF34861993FE0DDC6F80612673FE1811E75FD56593FE21744E1E85
A1F3FE2A1C117D87BE73FE321E24B8840603FE398C6EDBFD57B3FE407657F0E3CAA3FE
46E936C8909363FE4CF0B373EFC2C3FE5296DD981A3F53FE57E4A2DC825A33FE5CE1E2
74DF0D03FE61958FE2A04393FB5AEC887B2283E3EB2665644A2F34F3FB28EDB07E29D5
03FC14F16DAE12D443FC8534BF3C7AE173FCE821876CCEE8E3FD1FFA55EE8A66F3FD47
38E1275FB0E3FD6A80B9643F63A3FD8A63DCDA723813FDA759B72B7AD813FDC1C4BC89
BDEC53FDD9F6EAAD8863E3FDF0351B8484A363FE025C9CC7A32193FE0BDA639F72DDB3
FE14A918B0AE91B3FE1CDAF9E80C3903FE247FD2D88667B3FE2BA56EF0EBBE63FE3257
BF856BAE33FE38A150911FCA03FE3E8B7747284063FE441E6F724CD043FE4961894E46
29C3FC3FFE8BA05784F3FB28EDB07E29D503EB30A107AFB1A263FB0378EE32060F53FB
E8219D657F5663FC5992DA6B4E8B33FCB44BF1C6007FD3FD02EE55060C7693FD27CAF5
69F67F23FD4945CFEC31AF13FD67D09A1101BDC3FD83CA069D1DCAA3FD9D819ACA4634
C3FDB53A50237D0973FDCB2D450B0B9CA3FDDF8B850C776543FDF27F37BCB18103FE02
166EE87C3C03FE0A5A2A6DE7BA13FE1218A173990413FE195DFE45BD39E3FE20350C19
7173C3FE26A74F011D7603FE2CBD3AE7EB32D3FE327E5E1CF46013FCBD62B98A5A1E73
FC14F16DAE12D443FB0378EE32060F53E85F743D345A8363FACCC423ED005A23FBB44C
42816273C3FC36B7D78000ACB3FC8A641BF6652873FCD663D15D40A803FD0DDC7799FD
5D33FD2D9D228CB33163FD4ACE1A11BF9433FD65BB66B7B3CFC3FD7EA5C2D8E94BF3FD
95C4D8B791A733FDAB487BAB025DE3FDBF5A15F0E42083FDD21DCBD5C76B63FDE3B306
C38CB3E3FDF43557F66D2173FE01DEA0EBBAA723FE09302E90CA02C3FE1018EC826C22
E3FE16A16D1321F283FE1CD1564BF67F73FD14F121865BA603FC8534BF3C7AE173FBE8
219D657F5663FACCC423ED005A23EA42E78466709B93FA9E4BC0252524C3FB8A649A24
AC2153FC1A3C02DEAE5603FC67D0AA3F12C153FCAEE07CF8913043FCF03532AF024B33
FD163C7941B02FA3FD321E40A6C6FB43FD4BFE2C60F41B23FD6411BF95E39ED3FD7A87
4E10CFC913FD8F8742D17730B3FDA334C8D1C3EC23FDB5AEB35FA80123FDC7106B7A4F
E6F3FDD7721C3F3550F3FDE6E93C382257E3FDF588F817C673B3FE01B136C0C7B603FE
084268062DFF63FD445683B0A949A3FCE821876CCEE8E3FC5992DA6B4E8B33FBB44C42
816273C3FA9E4BC0252524C3EAF8BC41525EF9F3FA7850D17830FFE3FB67D0CA9B34C8
63FC0286B4D7BBFDC3FC4ACE313DF50A03FC8D7B0D8D3D5D03FCCB2D7CE5D9B923FD02
37800C0E5D13FD1CDB03827CADB3FD35B4862F03A3A3FD4CF0B9CB6F27F3FD62B686B5
1C7433FD77280EC8E2E0D3FD8A63951EE24DA3FD9C83DB5E8E6A63FDADA09F6B6C69F3
FDBDCF1609490263FDCD222DF9CEBDB3FDDBAAC00CBEE303FDE9781BE46FD343FD6E19
20136F1353FD1FFA55EE8A66F3FCB44BF1C6007FD3FC36B7D78000ACB3FB8A649A24AC
2153FA7850D17830FFE3E902D7135842B073FA58B3B2DB9B2D03FB4ACE5F970FE1A3FB
DCFA5127557D93FC321E787E257BC3FC70E1A76AE1A203FCAB488EDE2B7943FCE1C37C
9DDE9873FD0A5A30C5671F43FD2238449A2CCA33FD38A16A321DC073FD4DB6BEC1BCE6
63FD61959A7C2FB5D3FD7458029EB67C13FD861533FC835F23FD96E1EE70564163FDA6
D0B00D21C743FDB5F23797255E03FDC455A941E7B2D3FD932B3EA76D8843FD4738E127
5FB0E3FD02EE55060C7693FC8A641BF6652873FC1A3C02DEAE5603FB67D0CA9B34C863
FA58B3B2DB9B2D03E972C75F527A6FF3FA3DFD0E6F3FBA13FB321EE8305218A3FBBAA8
9D7B4D13B3FC1CDB16B75D9713FC581DECDA464D93FC8F874F7EBE2D13FCC37404FB0A
A483FCF4358B36B14053FD1109E8664F4D13FD26A75999D10153FD3B0F65D2008E23FD
4E5B51EE05EDE3FD60A1AEE8959313FD71F6A00D84AB83FD826C5349DAE8C3FD921343
9F542823FDA0FA498E92A023FDB44BC96A0753E3FD6A80B9643F63A3FD27CAF569F67F
23FCD663D15D40A803FC67D0AA3F12C153FC0286B4D7BBFDC3FB4ACE5F970FE1A3FA3D
FD0E6F3FBA13EABEC552E06510A3FA271BD8472D26E3FB1CDB3D206F7DC3FB9CF0BA34
3B3D63FC0A5A3D72AE1BA3FC427780C52B5093FC77284205B763B3FCA8BA241253CBA3
FCD772316EE49983FD01C6C9054AA043FD16A16FDF887C93FD2A616F5F1D16D3FD3D1C
900DE78FC3FD4EE66EFAD8A583FD5FD0DDFE786B73FD6FEBE7D12752F3FD7F46187CC9
6053FDD2131DC27250B3FD8A63DCDA723813FD4945CFEC31AF13FD0DDC7799FD5D33FC
AEE07CF8913043FC4ACE313DF50A03FBDCFA5127557D93FB321EE8305218A3FA271BD8
472D26E3E9334903F354A793FA134B355A154F63FB0A5A56CBDC3C83FB82F5F919C885
43FBF435F1B05A4613FC2F60775808FD13FC6195AFAD96CC73FC90FC58712964B3FCBD
CF1BA585B2A3FCE8425FAB4934F3FD0842800E4A7403FD1B608AAD8E3043FD2D8E785D
9CAEC3FD3EDD8613BC05C3FD4F5D557936D633FD5F1C2D5EE82AC3FDECFCC44AEDF103
FDA759B72B7AD813FD67D09A1101BDC3FD2D9D228CB33163FCF03532AF024B33FC8D7B
0D8D3D5D03FC321E787E257BC3FBBAA89D7B4D13B3FB1CDB3D206F7DC3FA134B355A15
4F63E895A3212E6C2CC3FA01F9E1553482C3FAF43696EBF078B3FB6C0D95404BD113FB
D7725BD1B2C6B3FC1E6B1ED44DECF3FC4E5B57888AD013FC7BC1E09BC7D853FCA6D0DB
4BD6F333FCCFB54CC0877603FCF698257981E433FD0DCF245650B893FD1F74927ACBB6
13FD304BA046C4D103FD40620CE1FC0E23FE02B6CF34861993FDC1C4BC89BDEC53FD83
CA069D1DCAA3FD4ACE1A11BF9433FD163C7941B02FA3FCCB2D7CE5D9B923FC70E1A76A
E1A203FC1CDB16B75D9713FB9CF0BA343B3D63FB0A5A56CBDC3C83FA01F9E1553482C3
EA45585DD3C479E3F9E568EF39D78FC3FAD772B08F101113FB57B3CA7933BE33FBBDCF
26D71FDB13FC0F416188D6DFC3FC3D1CB34955FAD3FC68A9842282EF83FC92135A345A
CED3FCB9818531CAD6C3FCDF179EF8C12BE3FD017B1332111333FD129D32AD05C503FD
22FF8F8162A233FE0DDC6F80612673FDD9F6EAAD8863E3FD9D819ACA4634C3FD65BB66
B7B3CFC3FD321E40A6C6FB43FD0237800C0E5D13FCAB488EDE2B7943FC581DECDA464D
93FC0A5A3D72AE1BA3FB82F5F919C88543FAF43696EBF078B3F9E568EF39D78FC3E952
FEEC223FFCC3F9CA455D16B06A73FABDCF3D3FD38C03FB4581C4EFEB5643FBA6D1168D
AA04F3FC019DBB87EE0503FC2D8E8EF2A35573FC5764C1B6F43C63FC7F4618F87B4FA3
FCA5550C3ABAAAD3FCC9B0B0FA6DCBB3FCEC75739A628993FD06DEB9939CF0E3FE1811
E75FD56593FDF0351B8484A363FDB53A50237D0973FD7EA5C2D8E94BF3FD4BFE2C60F4
1B23FD1CDB03827CADB3FCE1C37C9DDE9873FC8F874F7EBE2D13FC427780C52B5093FB
F435F1B05A4613FB6C0D95404BD113FAD772B08F101113F9CA455D16B06A73E7668455
BB64EF13F9B2031B33245423FAA6D18D11502873FB3523E5D7F28523FB9213876127CC
23FBEA8FFC715C0C13FC1F7492FBA50F63FC47B3F214C2CB43FC6E26FC97607173FC92
EBC831FFCED3FCB61DE7D5386C93FCD7D6BA684482B3FE21744E1E85A1F3FE025C9CC7
A32193FDCB2D450B0B9CA3FD95C4D8B791A733FD6411BF95E39ED3FD35B4862F03A3A3
FD0A5A30C5671F43FCC37404FB0AA483FC77284205B763B3FC2F60775808FD13FBD772
5BD1B2C6B3FB57B3CA7933BE33FABDCF3D3FD38C03F9B2031B33245423E9DA0A5935A6
2AA3F99C315282E3B083FA9213E1B8B202B3FB2656757D0EAF53FB7F461A005D4E33FB
D425AFD6B69F53FC129D4837C2B323FC39621CC99D1413FC5E7E5C86A69353FC820CCB
E1019C93FCA428CA2714BCB3FE2A1C117D87BE73FE0BDA639F72DDB3FDDF8B850C7765
43FDAB487BAB025DE3FD7A874E10CFC913FD4CF0B9CB6F27F3FD2238449A2CCA33FCF4
358B36B14053FCA8BA241253CBA3FC6195AFAD96CC73FC1E6B1ED44DECF3FBBDCF26D7
1FDB13FB4581C4EFEB5643FAA6D18D11502873F99C315282E3B083E9695C8A772D1CB3
F98873BA18068A73FA7F461C0C01C363FB18E37B8A16F423FB6E2727B049E993FBBFB0
E2C953EA93FC06DED134A51E13FC2C42DD5D2E5283FC5020A30DB6A1F3FC7291B9DB96
59C3FE321E24B8840603FE14A918B0AE91B3FDF27F37BCB18103FDBF5A15F0E42083FD
8F8742D17730B3FD62B686B51C7433FD38A16A321DC073FD1109E8664F4D13FCD77231
6EE49983FC90FC58712964B3FC4E5B57888AD013FC0F416188D6DFC3FBA6D1168DAA04
F3FB3523E5D7F28523FA9213E1B8B202B3F98873BA18068A73E4060390D828BF63F976
851CEADE6403FA6E277DDDFD51F3FB0C9D8BF72E9D13FB5E7E8BC49765C3FBACF1DDAB
D6D8D3FBF830F7E8B10E43FC203876D8BE3673FC42ED0E46FBCE33FE398C6EDBFD57B3
FE1CDAF9E80C3903FE02166EE87C3C03FDD21DCBD5C76B63FDA334C8D1C3EC23FD7728
0EC8E2E0D3FD4DB6BEC1BCE663FD26A75999D10153FD01C6C9054AA043FCBDCF1BA585
B2A3FC7BC1E09BC7D853FC3D1CB34955FAD3FC019DBB87EE0503FB9213876127CC23FB
2656757D0EAF53FA7F461C0C01C363F976851CEADE6403E958B85520971793F96628BA
9559F253FA5E7EEA4288CE93FB015E009F60D0A3FB5020A9B33528A3FB9BBE67C069CE
33FBE463A4B9341E03FC151E0BA2AE3CD3FE407657F0E3CAA3FE247FD2D88667B3FE0A
5A2A6DE7BA13FDE3B306C38CB3E3FDB5AEB35FA80123FD8A63951EE24DA3FD61959A7C
2FB5D3FD3B0F65D2008E23FD16A16FDF887C93FCE8425FAB4934F3FCA6D0DB4BD6F333
FC68A9842282EF83FC2D8E8EF2A35573FBEA8FFC715C0C13FB7F461A005D4E33FB18E3
7B8A16F423FA6E277DDDFD51F3F96628BA9559F253E979FB24D2BE56A3F957288E4BAB
21D3FA5020B700F1E633FAEE17C390EFEF23FB42ED2CFBCDF783FB8BE1E30EA19133FB
D2146B41CE73C3FE46E936C8909363FE2BA56EF0EBBE63FE1218A173990413FDF43557
F66D2173FDC7106B7A4FE6F3FD9C83DB5E8E6A63FD7458029EB67C13FD4E5B51EE05ED
E3FD2A616F5F1D16D3FD0842800E4A7403FCCFB54CC0877603FC92135A345ACED3FC57
64C1B6F43C63FC1F7492FBA50F63FBD425AFD6B69F53FB6E2727B049E993FB0C9D8BF7
2E9D13FA5E7EEA4288CE93F957288E4BAB21D3E6A9BB4C080B4A03F949656F4D174373
FA42ED6A7B6FCA33FADB0F5DDBC85133FB36B868165FD7F3FB7D3D02AD3FFCE3FE4CF0
B373EFC2C3FE3257BF856BAE33FE195DFE45BD39E3FE01DEA0EBBAA723FDD7721C3F35
50F3FDADA09F6B6C69F3FD861533FC835F23FD60A1AEE8959313FD3D1C900DE78FC3FD
1B608AAD8E3043FCF698257981E433FCB9818531CAD6C3FC7F4618F87B4FA3FC47B3F2
14C2CB43FC129D4837C2B323FBBFB0E2C953EA93FB5E7E8BC49765C3FB015E009F60D0
A3FA5020B700F1E633F949656F4D174373E8EBFF827B85C583F93CB5EB375AB003FA36
B8C9D1C2F053FAC97C9A4A909243FB2B7787028DADE3FE5296DD981A3F53FE38A15091
1FCA03FE20350C197173C3FE09302E90CA02C3FDE6E93C382257E3FDBDCF1609490263
FD96E1EE70564163FD71F6A00D84AB83FD4EE66EFAD8A583FD2D8E785D9CAEC3FD0DCF
245650B893FCDF179EF8C12BE3FCA5550C3ABAAAD3FC6E26FC97607173FC39621CC99D
1413FC06DED134A51E13FBACF1DDABD6D8D3FB5020A9B33528A3FAEE17C390EFEF23FA
42ED6A7B6FCA33F93CB5EB375AB003E986EB563E1784F3F930FE5E754255A3FA2B77A0
50BD0EC3FAB935050E6A7883FE57E4A2DC825A33FE3E8B7747284063FE26A74F011D76
03FE1018EC826C22E3FDF588F817C673B3FDCD222DF9CEBDB3FDA6D0B00D21C743FD82
6C5349DAE8C3FD5FD0DDFE786B73FD3EDD8613BC05C3FD1F74927ACBB613FD017B1332
111333FCC9B0B0FA6DCBB3FC92EBC831FFCED3FC5E7E5C86A69353FC2C42DD5D2E5283
FBF830F7E8B10E43FB9BBE67C069CE33FB42ED2CFBCDF783FADB0F5DDBC85133FA36B8
C9D1C2F053F930FE5E754255A3E794E35178D223C3F92623708A9119F3FA20FECA79F9
FFB3FE5CE1E274DF0D03FE441E6F724CD043FE2CBD3AE7EB32D3FE16A16D1321F283FE
01B136C0C7B603FDDBAAC00CBEE303FDB5F23797255E03FD9213439F542823FD6FEBE7
D12752F3FD4F5D557936D633FD304BA046C4D103FD129D32AD05C503FCEC75739A6289
93FCB61DE7D5386C93FC820CCBE1019C93FC5020A30DB6A1F3FC203876D8BE3673FBE4
63A4B9341E03FB8BE1E30EA19133FB36B868165FD7F3FAC97C9A4A909243FA2B77A050
BD0EC3F92623708A9119F3E85071F5E7BF7643F91C07AD1A6D5023FE61958FE2A04393
FE4961894E4629C3FE327E5E1CF46013FE1CD1564BF67F73FE084268062DFF63FDE978
1BE46FD343FDC455A941E7B2D3FDA0FA498E92A023FD7F46187CC96053FD5F1C2D5EE8
2AC3FD40620CE1FC0E23FD22FF8F8162A233FD06DEB9939CF0E3FCD7D6BA684482B3FC
A428CA2714BCB3FC7291B9DB9659C3FC42ED0E46FBCE33FC151E0BA2AE3CD3FBD2146B
41CE73C3FB7D3D02AD3FFCE3FB2B7787028DADE3FAB935050E6A7883FA20FECA79F9FF
B3F91C07AD1A6D5023F9107D6B2568F66-F$6%F&F&X4F,F-F.[gl'!%\"!!#\\bm\":\"
:!!!!!!!!3FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF00000000000003
FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF0000
0000000003FF00000000000003FF00000000000003FF00000000000003FF0000000000
0003FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF
00000000000003FF00000000000003FF00000000000003FF00000000000003FF000000
00000003FF00000000000003FF00000000000003FF00000000000003FF000000000000
03FF00000000000003FF00000000000003FF00000000000003FF00000000000003FF00
000000000003FF00000000000003FF00000000000003FF00000000000003FF00000000
000003FF00000000000003FF00000000000003FF00000000000003FF0000000000000-
%+AXESLABELSG6%%\"xG%\"yGQ!F.-%*AXESSTYLEG6#%$BOXG" 1 2 0 1 10 0 2 1 
1 2 2 1.000000 85.000000 97.000000 0 0 "Curve 1" "Curve 2" }}}}{EXCHG 
{PARA 11 "" 1 "" {XPPMATH 20 "6#$\"&Y<#!\"$" }}}{EXCHG {PARA 0 "" 0 "
" {MPLTEXT 0 21 352 "tv := time():\nn := 40:\ninit := 0.5:\nfin  := 10
:\nstep_y := evalf[24]((fin - init) / n):\nTPar := table([]):\nfor i t
o n\n  do\n    left  := init + (i - 1) * step_y:\n    right := left + \+
step_y:\n    s     := funcMinArg(left, right):\n    ep    := expans_pa
r(left, right, s):\n    TPar[i]  := [left, right, s, ep]:\n  od:\nTPar
 := convert(TPar, list):\ntime() - tv;" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#$\"&Zt\"!\"$" }}}{SECT 1 {PARA 4 "" 0 "" {TEXT -1 4 "TPar" }}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 3400 "TPar := [[.5, .7375000000,
 .618750000014551915228367, .414092969244831947535864e-1], [.737500000
0, .9750000000, .856249999997089616954325, .382558825289592905865922e-
1], [.9750000000, 1.212500000, 1.09374999997962731868027, .35547077314
6424703246551e-1], [1.212500000, 1.450000000, 1.3312499999978172127157
5, .331953362034094641891532e-1], [1.450000000, 1.687500000, 1.5687500
0001600710675121, .311346180613343951932163e-1], [1.687500000, 1.92500
0000, 1.80624999999854480847715, .293141818579455504327717e-1], [1.925
000000, 2.162500000, 2.04374999998108251020312, .276944084938933329016
761e-1], [2.162500000, 2.400000000, 2.28125000003492459654809, .262439
179636835168717178e-1], [2.400000000, 2.637500000, 2.51875000001746229
827404, .249375373910004834876417e-1], [2.637500000, 2.875000000, 2.75
625000000000000000000, .237548411377091403073973e-1], [2.875000000, 3.
112500000, 2.99375000000036379788071, .226790837822856307975746e-1], [
3.112500000, 3.350000000, 3.23125000000072759576141, .2169640811908098
84442530e-1], [3.350000000, 3.587500000, 3.46875000001891748979688, .2
07952490019317563077554e-1], [3.587500000, 3.825000000, 3.706250000001
45519152285, .199658787964664174969717e-1], [3.825000000, 4.062500000,
 3.94374999998399289324879, .192000568037303999787931e-1], [4.06250000
0, 4.300000000, 4.18125000000218278728425, .184907558546991406383260e-
1], [4.300000000, 4.537500000, 4.41875000002037268131972, .17831947101
3804992302293e-1], [4.537500000, 4.775000000, 4.6562500000029103830456
8, .172184289326648331605132e-1], [4.775000000, 5.012500000, 4.8937499
9998544808477163, .166456899429947722706476e-1], [5.012500000, 5.25000
0000, 5.13125000000363797880709, .161097981838112820509805e-1], [5.250
000000, 5.487500000, 5.36874999995052348822354, .156073111205285641076
929e-1], [5.487500000, 5.725000000, 5.60625000000436557456851, .151352
017899484410408912e-1], [5.725000000, 5.962500000, 5.84374999998690327
629447, .146907980299665041345294e-1], [5.962500000, 6.200000000, 6.08
125000004074536263943, .142717319530089741541301e-1], [6.200000000, 6.
437500000, 6.31874999998763087205588, .138758978744741221024264e-1], [
6.437500000, 6.675000000, 6.55625000000582076609136, .1350141703677959
39962834e-1], [6.675000000, 6.912500000, 6.79374999998835846781731, .1
31466078337413939111774e-1], [6.912500000, 7.150000000, 7.031249999970
89616954326, .128099606319543063197481e-1], [7.150000000, 7.387500000,
 7.26874999995343387126923, .124901163431769575280489e-1], [7.38750000
0, 7.625000000, 7.50625000000727595761418, .121858481191140885467706e-
1], [7.625000000, 7.862500000, 7.74374999991850927472115, .11896045683
3752057381724e-1], [7.862500000, 8.100000000, 7.9812499999723513610661
1, .116202598748903803958795e-1], [8.100000000, 8.337500000, 8.2187500
0002619344741106, .113572727877501525096464e-1], [8.337500000, 8.57500
0000, 8.45625000000873114913701, .111058861267663590581463e-1], [8.575
000000, 8.812500000, 8.69374999999126885086299, .108653513991716151598
342e-1], [8.812500000, 9.050000000, 8.93125000011641532182694, .106361
112544556969216556e-1], [9.050000000, 9.287500000, 9.16875000009895302
355289, .104165660440439119246209e-1], [9.287500000, 9.525000000, 9.40
624999993888195604085, .102058231437579208137764e-1], [9.525000000, 9.
762500000, 9.64375000006402842700482, .100033680831394185044554e-1], [
9.762500000, 10.00000000, 9.79999999992869561538101, .1663067381240083
55811417e-1]]:" }}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 100 "for i t
o nops(TPar) - 1 \n  do\n    if not (TPar[i,2] = TPar[i + 1,1]) then p
rint(\"i = \", i); fi\n  od:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 0 "" }}}{SECT 1 {PARA 4 "" 0 "" {TEXT -1 13 "make_proc_str" }}
{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 329 "make_proc_str :=\nproc()\nlo
cal proc_str, str, i, format_numb;\n   format_numb :=\n   proc(s)\n   \+
local i, n;\n      n := length(s);\n      if s[n] = \"0\"\n        the
n for i to n\n               do\n                 if s[n-i] <> \"0\" t
hen break fi\n               od;\n             return s[1..n - i]\n   \+
   fi;\n      return s\n   end proc;\n   " }{TEXT -1 17 "-------------
----" }{MPLTEXT 1 0 577 "\n   proc_str := cat( \"getShift :=\", \"\\n
\",\n                    \"proc(y::numeric)\", \"\\n\"\n              \+
    );\n   str := cat( \"   if y = 0.5 then return \", format_numb(con
vert(TParNewSort[1,3], string)), \" fi;\\n\" );\n   proc_str := cat(pr
oc_str, str);\n   for i to nops(TParNewSort)\n     do\n       str := c
at( \"   if (y > \", format_numb(convert(TParNewSort[i,1], string)), \+
\") and \"\n                         \"(y <= \", format_numb(convert(T
ParNewSort[i,2], string)), \") then return \",\n                   for
mat_numb(convert(TParNewSort[i,3], string)), \" fi;\", \"\\n\"\n      \+
           );" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 110 "       proc_str :
= cat(proc_str, str);\n     od;\n   str := \"end proc:\";\n   return c
at(proc_str, str);\nend proc:" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }
}}{EXCHG {PARA 0 "" 0 "" {MPLTEXT 0 21 16 "make_proc_str();" }{TEXT 
-1 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 264 "   format_numb :=\n   proc(s)\n   \+
local i, n;\n      n := length(s);\n      if s[n] = \"0\"\n        the
n for i to n\n               do\n                 if s[n-i] <> \"0\" t
hen break fi\n               od;\n             return s[1..n - i]\n   \+
   fi;\n      return s\n   end proc:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 53 "map(el -> format_numb(convert(el[1], string)), TPar);
" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#7JQ#.56\"Q&.7375F%Q%.975F%Q'1.2125
F%Q%1.45F%Q'1.6875F%Q&1.925F%Q'2.1625F%Q$2.4F%Q'2.6375F%Q&2.875F%Q'3.1
125F%Q%3.35F%Q'3.5875F%Q&3.825F%Q'4.0625F%Q$4.3F%Q'4.5375F%Q&4.775F%Q'
5.0125F%Q%5.25F%Q'5.4875F%Q&5.725F%Q'5.9625F%Q$6.2F%Q'6.4375F%Q&6.675F
%Q'6.9125F%Q%7.15F%Q'7.3875F%Q&7.625F%Q'7.8625F%Q$8.1F%Q'8.3375F%Q&8.5
75F%Q'8.8125F%Q%9.05F%Q'9.2875F%Q&9.525F%Q'9.7625F%" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 64 "map(el -> format_numb(convert(evalf[24](e
l[3]), string)), TPar);" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#7JQ:.618750
0000145519152283676\"Q:.856249999997089616954325F%Q:1.0937499999796273
1868027F%Q:1.33124999999781721271575F%Q:1.56875000001600710675121F%Q:1
.80624999999854480847715F%Q:2.04374999998108251020312F%Q:2.28125000003
492459654809F%Q:2.51875000001746229827404F%Q(2.75625F%Q:2.993750000000
36379788071F%Q:3.23125000000072759576141F%Q:3.46875000001891748979688F
%Q:3.70625000000145519152285F%Q:3.94374999998399289324879F%Q:4.1812500
0000218278728425F%Q:4.41875000002037268131972F%Q:4.6562500000029103830
4568F%Q:4.89374999998544808477163F%Q:5.13125000000363797880709F%Q:5.36
874999995052348822354F%Q:5.60625000000436557456851F%Q:5.84374999998690
327629447F%Q:6.08125000004074536263943F%Q:6.31874999998763087205588F%Q
:6.55625000000582076609136F%Q:6.79374999998835846781731F%Q:7.031249999
97089616954326F%Q:7.26874999995343387126923F%Q:7.506250000007275957614
18F%Q:7.74374999991850927472115F%Q:7.98124999997235136106611F%Q:8.2187
5000002619344741106F%Q:8.45625000000873114913701F%Q:8.6937499999912688
5086299F%Q:8.93125000011641532182694F%Q:9.16875000009895302355289F%Q:9
.40624999993888195604085F%Q:9.64375000006402842700482F%Q:9.79999999992
869561538101F%" }}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}}{MARK "1" 0 }{VIEWOPTS 1 1 1 1 1 1803 1 1 1 1 
}{PAGENUMBERS 0 1 2 33 1 1 }
